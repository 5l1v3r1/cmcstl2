include("../concept_select.txt")

add_executable(alg.adjacent_find adjacent_find.cpp)
add_test(test.alg.adjacent_find alg.adjacent_find)

add_executable(alg.all_of all_of.cpp)
add_test(test.alg.all_of alg.all_of)

add_executable(alg.any_of any_of.cpp)
add_test(test.alg.any_of alg.any_of)

add_executable(alg.count count.cpp)
add_test(test.alg.count alg.count)

add_executable(alg.count_if count_if.cpp)
add_test(test.alg.count_if alg.count_if)

add_executable(alg.equal equal.cpp)
add_test(test.alg.equal alg.equal)

add_executable(alg.find find.cpp)
add_test(test.alg.find alg.find)

add_executable(alg.find_end find_end.cpp)
add_test(test.alg.find_end alg.find_end)

add_executable(alg.find_first_of find_first_of.cpp)
add_test(test.alg.find_first_of alg.find_first_of)

add_executable(alg.find_if find_if.cpp)
add_test(test.alg.find_if alg.find_if)

add_executable(alg.find_if_not find_if_not.cpp)
add_test(test.alg.find_if_not alg.find_if_not)

add_executable(alg.for_each for_each.cpp)
add_test(test.alg.for_each alg.for_each)

add_executable(alg.is_permutation is_permutation.cpp)
add_test(test.alg.is_permutation alg.is_permutation)

add_executable(alg.mismatch mismatch.cpp)
add_test(test.alg.mismatch alg.mismatch)

add_executable(alg.none_of none_of.cpp)
add_test(test.alg.none_of alg.none_of)

add_executable(alg.search search.cpp)
add_test(test.alg.search alg.search)

add_executable(alg.transform transform.cpp)
add_test(test.alg.transform alg.transform)
